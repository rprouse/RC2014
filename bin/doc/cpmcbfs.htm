<HTML>
  <HEAD>
    <TITLE>CP/M Callback Filesystem</TITLE>
    <LINK REL="stylesheet" TYPE="text/css" HREF="default.css" MEDIA="all">
  </HEAD>
  <BODY>

    <H1>CP/M Callback Filesystem</H1>

    <P><CODE>cpmcbfs</CODE> is the use of the EldoS
    <A HREF="https://www.eldos.com/cbfs/">Callback Filesystem</A> library,
    combined with the
    <A HREF="http://www.moria.de/~michael/cpmtools/">cpmtools</A>
    project by Michael Haardt,
    to allow Windows to mount CP/M filesystems.
    This project is essentially the Windows equivalent to
    <A HREF="http://www.nyangau.org/cpmfuse/cpmfuse.htm">cpmfuse</A>.

    <P>It was written because some users of my
    <A HREF="http://www.nyangau.org/memotech/memotech.htm">Memotech</A>
    related projects prefer not to use command line tools.
    Memotech computers used CP/M 2.2 filesystems, even when accessing
    floppy disks from BASIC.
    I include appropriate <CODE>diskdefs</CODE> for these.

<!--...sExample:4:-->
<H2>Example</H2>

<P>Usage :-
<PRE>
c:\cpmcbfs&gt;cpmcbfs --help
usage: cpmcbfs [flags]
flags: -f,--format format  format (default %CPMTOOLSFMT% or memotech-type18)
       -i,--image image    image (must be specified)
       -u,--user user      CP/M user (default 0)
       -v,--invert-case    toggle case to match what CP/M uses
       -d,--drive d:       mount as drive d: (default Z:)
       -r,--read-only      read only access
       --install           install cbfs driver
       --uninstall         uninstall cbfs driver
       --status            is the driver installed and running</PRE>

<P>Installation and uninstallation of the driver requires that you be running
as Administrator, and that <CODE>cbfs.cab</CODE> be in the current directory.
Other uses of the program don't require this :-
<PRE>
c:\cpmcbfs&gt;cpmcbfs --install
Reboot the computer to complete the installation</PRE>

<P>Is the driver installed and running :-
<PRE>
c:\cpmcbfs&gt;cpmcbfs --status
Driver (5.0.143.31) installed, service is running</PRE>

<P>Normal use :-
<PRE>
c:\cpmcbfs>cpmcbfs -f memotech-type18 -i sddisc.bin -v
Drive Z: should exist until you press Enter</PRE>

<P>In another Window :-
<PRE>
c:\&gt;dir z:S*.COM
 Volume in drive Z is CbFS CP/M filesystem
 Volume Serial Number is 4350-4D5A

 Directory of Z:\

01/01/1970  00:00               640 SDIR.COM
01/01/1970  00:00               384 STARTUP.COM
01/01/1970  00:00             5,248 STAT.COM
01/01/1970  00:00             1,280 SUB.COM
01/01/1970  00:00               512 SYSCOPY.COM
01/01/1970  00:00            45,952 SMG2M.COM
01/01/1970  00:00            35,968 SMG.COM
01/01/1970  00:00            15,488 STAR.COM
               8 File(s)        105,472 bytes
               0 Dir(s)       5,554,176 bytes free

c:\&gt;</PRE>

<P>Or use Windows Explorer or other programs to access files on Z:.

<P>Using this program with devices directly requires that you run it as
Administrator.
You can enumerate suitable block devices like so :-
<PRE>
c:\cpmcbfs&gt;cpmcbfs -i ?
\\.\PhysicalDrive0                       fixed       60801 255 63  512 465.76GB
\\.\PhysicalDrive3                       removable      15 255 63  512 117.66MB
\\.\C:                                   fixed       60801 255 63  512 465.76GB
\\.\D:                                   fixed       60801 255 63  512 465.76GB
\\.\G:                                   removable      15 255 63  512 117.66MB
cpmcbfs: can't open ? (available devices were enumerated instead)</PRE>

<P>If you do this before you plug in your SD Card or other media, and then
again afterwards, you can easily spot the device to use.
Note how the SD Card I used above appears twice, once accessible as
<CODE>\\.\PhysicalDrive3</CODE> and once as <CODE>\\.\G:</CODE>.
If you get no devices listed, its probably because you're not running as
Administrator.

<P>You can then use a command like this :-
<PRE>
c:\cpmcbfs&gt;cpmcbfs -i \\.\PhysicalDrive3 -v</PRE>

<P>Because <CODE>cpmcbfs</CODE> is built using code from <CODE>cpmtools</CODE>
it uses the same <CODE>diskdefs</CODE> or
<CODE>c:\cpmtools\diskdefs</CODE> configuration file,
and also uses the same filesystem format names.

<P>If <CODE>-f</CODE> is not used <CODE>cpmcbfs</CODE> honors the
<CODE>%CPMTOOLSFMT%</CODE> environment variable, and failing that
falls back to <CODE>memotech-type18</CODE>.

<P>Note how the <CODE>-i</CODE> argument must be specified,
and can refer to a device, such as an SD Card.

<P>CP/M filesystems support the concept of 16 (or maybe even 32) users.
You can specify the user when you mount.

<P>Although CP/M actually uses uppercase filenames, <CODE>cpmtools</CODE>
makes it look as if they are lowercase.
Ordinarily this is not a problem, except for the case where CP/M programs
actually break the rules and write files with lowercase names.
The <CODE>-v</CODE> problem toggles the case so that the files appear
in uppercase on Windows.
<!--...e-->
<!--...sLimitations:4:-->
<H2>Limitations</H2>

<P><CODE>cpmcbfs</CODE> doesn't expose any special files such as
passwords or labels.
Raw <CODE>cpmtools</CODE> does, as specially named files.

<P>Read only status is affected by the 0200 weighted file permission.
Other file attributes are not supported.
<CODE>cpmcbfs</CODE> doesn't fabricate the execute bits if the
filename ends in <CODE>.com</CODE> as Windows won't be able to
execute these files anyway.

<P><CODE>cpmtools</CODE> seems to have a bug in <CODE>cpmfs.c</CODE> line 812,
causing it to apply exact file length logic to all versions of CP/M,
not just the ISX variant, as it should.

<P>If you create a file and then don't write anything to it,
you seem to end up with a file containing 128 bytes of 0.
I think this may be a consequence of <CODE>cpmCreat</CODE> locating a
file extent, prior to any <CODE>cpmWrite</CODE> that might follow.

<P>Attempts to create subdirectories will fail.

<P>Attempts to create files with certain characters in their names
(those not allowed by CP/M) will fail.

<P>Attempts to change file ownership will fail.

<P>Attempts to set creation, modification and access times may work on
CP/M filesystem versions that support it, but silently do nothing otherwise.

<P>I didn't keep all the <CODE>configure</CODE> stuff in the original
<CODE>cpmtools</CODE> source code.
You can easily tweak the <CODE>makefile</CODE> and <CODE>config.h</CODE>
if needs be.

<P><B>At the moment, its only a command line program and there is no
Windows GUI.</B>
It would be nice to be able to pick the file or device to mount and the
drive to mount it as, and perhaps even be able to do this from Explorer.
I don't know how to do this at present.

<P>This software should not be sold.
EldoS sell licenses to use their CbFS library.
They also generously offer free non-commercial licenses to developers
creating software for non-commercial purposes (only).
A non-commercial license is used by <CODE>cpmcbfs</CODE>.

<P>As I am using Visual Studio 2013 to compile the code, and the earliest
Windows subsystem level it will let me specify to the LINKer is 5.01,
this program requires Windows XP or later.
<!--...e-->
<!--...sFolding:4:-->
<H2>Folding</H2>

<P>It is interesting to note that Michael Haardt wrote a folding editor
(called <A HREF="http://www.moria.de/~michael/fe/">fe</A>)
and the <CODE>cpmtools</CODE> source code is folded.
I too wrote a folding editor
(called <A HREF="http://www.nyangau.org/ae/ae.htm">ae</A>)
and the <CODE>cpmcbfs</CODE> source code is also folded, although differently.
Hopefully the result isn't too crumpled.
<!--...e-->
<!--...sDownload:4:-->
<H2>Download</H2>

<P><CODE>cpmcbfs</CODE> can be downloaded from 
<A HREF="http://www.nyangau.org/cpmcbfs/cpmcbfs.zip">
   <CODE>http://www.nyangau.org/cpmcbfs/cpmcbfs.zip</CODE></A>.
<!--...e-->

<!--...sAuthor:4:-->
<HR>
This page maintained by Andy Key
<ADDRESS>andy.z.key@googlemail.com</ADDRESS>
<!--...e-->

  </BODY>
</HTML>
